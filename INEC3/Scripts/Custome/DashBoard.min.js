var swidth = 0, sheight = 0, scale = 0, width = $("#mapcontainer").width(), height = $("#mapcontainer").height(), iscancel = !1, iszoom = !1, activeProvince = 0; if (sheight = height / 3, scale = 3 * height, $(window).width() > 1440) { swidth = width / 4, scale -= 80; var projection = d3.geoMercator().scale(scale).translate([swidth, sheight]) } else if (1440 >= $(window).width() && $(window).width() > 768) { swidth = -70, scale -= 80; projection = d3.geoMercator().scale(scale).translate([swidth, sheight]) } else if (768 >= $(window).width() && $(window).width() > 425) { swidth = -150, scale = 2 * width; projection = d3.geoMercator().scale(scale).translate([swidth, sheight]) } else { swidth = -180, scale = 2 * height; projection = d3.geoMercator().scale(scale).translate([swidth, sheight]) } var path = d3.geoPath().projection(projection), zoom = d3.zoom().scaleExtent([1, 8]).on("zoom", zoomed), svg = d3.select("#map").append("svg").attr("width", width).attr("height", height).call(zoom).on("click", stopped, !0), g = svg.append("g"); svg.call(zoom); var states, counties, statePaths, gui = d3.select("#map"), tooltip = d3.select("body").append("div").attr("class", "nvtooltip xy-tooltip").attr("id", "tooltip").style("position", "absolute").style("z-index", "10").style("visibility", "hidden"); function clicked(t) { activeProvince = t.properties.GID_1.slice(4); var e = counties.filter(function (e) { return e.properties.GID_1.slice(4) === t.properties.GID_1.slice(4) }), o = d3.transition().duration(800), i = g.selectAll(".county").data(e, function (t) { return t.properties.GID_1.slice(4) }), a = i.enter().append("path").attr("class", "county").attr("d", path).style("fill", function (t) { return GetTerritoiresColor(t) }).attr("territoiryCode", function (t) { return t.properties.GID_2.slice(4).split(".")[1] }).style("opacity", 0).on("mouseover", function (t) { if (GenerateTooltip(t)) return tooltip.style("visibility", "visible") }).on("mousemove", function () { return tooltip.style("top", d3.event.pageY - 10 + "px").style("left", d3.event.pageX + 10 + "px") }).on("mouseout", function () { return tooltip.style("visibility", "hidden") }).on("click", function () { usZoom() }); statePaths.transition(o).attr("d", path).attr("class", "deactive"), a.transition(o).attr("d", path).style("opacity", 1), i.exit().transition(o).attr("d", path).style("opacity", 0).remove(), iszoom = !0, iscancel = !1, $("#btncancel").prop("disabled", !1); var s = path.bounds(t), l = s[1][0] - s[0][0], r = s[1][1] - s[0][1], n = (s[0][0] + s[1][0]) / 2, d = (s[0][1] + s[1][1]) / 2, c = Math.max(1, Math.min(3.5, .6 / Math.max(l / width, r / height))), p = [width / 2 - c * n, height / 2 - c * d]; svg.transition().duration(750).call(zoom.transform, d3.zoomIdentity.translate(p[0], p[1]).scale(c)) } function zoomed() { g.style("stroke-width", 1.5 / d3.event.transform.k + "px"), g.attr("transform", d3.event.transform), FillToolTipChart() } function stopped() { d3.event.defaultPrevented && d3.event.stopPropagation() } function GenerateTooltip(t) { var e = document.getElementById("tooltip"), o = document.getElementById("nvtable"); if (o.removeAttribute("hidden"), e.appendChild(o), $("#nvtable tbody tr").remove(), iszoom && !iscancel) return $("#header").text(t.properties.NAME_2), (i = TerritoiresResult.filter(function (e) { if (t.properties.GID_2) return e.GUI_2 === t.properties.GID_2.slice(4) })).length > 0 && ($("#LblToltiptitle").text("Results of " + t.properties.NAME_2), $("#TooltipChart").find("li").remove(), $.each(i, function (t, e) { $("#lblreporting").text(e.ReportedPerc + "% Reporting"), 0 === t ? $(o).find("tbody").append('<tr><td class="legend-color-guide"><div style="background-color:' + e.Color + ';"></div></td><td class="key" colspan="2" style="background-color:' + e.Color + ';">' + e.Candidat + '</td><td class="key">' + e.Party + '</td><td class="key">' + e.Votants + '</td><td class="value">' + e.Perce + " %</td></tr>") : $(o).find("tbody").append('<tr><td class="legend-color-guide"><div style="background-color:' + e.Color + ';"></div></td><td class="key" colspan="2" ">' + e.Candidat + '</td><td class="key">' + e.Party + '</td><td class="key">' + e.Votants + '</td><td class="value">' + e.Perce + " %</td></tr>"), $("#TooltipChart").append("<li><h2>" + e.Candidat + "</h2> <small>" + e.Votants + '</small><div class="pull-right">' + e.Perce + '% <i class="fa fa-level-up text-success"></i></div><div class="progress"><div class="progress-bar progress-bar-info" role="progressbar" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100" style="width:' + e.Perce + "%;background-color:" + e.Color + ';"> <span class="sr-only">20% Complete</span></div></div></li>') }), e.appendChild(o), !0); $("#header").text(t.properties.NAME_1); var i, a = 0; return (i = ProvinceResult.filter(function (e) { return e.GUI_1 === t.properties.GID_1.slice(4) })).length > 0 && ($.each(i, function (t, e) { a += parseInt(e.Votants) }), $("#LblToltiptitle").text("Results of " + t.properties.NAME_1), $("#TooltipChart").find("li").remove(), $.each(i, function (t, e) { $("#lblreporting").text(e.ReportedPerc + "% Reporting"); var i = (100 * parseInt(e.Votants) / a).toFixed(2); 0 === t ? $(o).find("tbody").append('<tr><td class="legend-color-guide"><div style="background-color:' + e.Color + ';"></div></td><td class="key" colspan="2" style="background-color:' + e.Color + ';">' + e.Candidat + '</td><td class="key">' + e.Party + '</td><td class="key">' + e.Votants + '</td><td class="value">' + i + " %</td></tr>") : $(o).find("tbody").append('<tr><td class="legend-color-guide"><div style="background-color:' + e.Color + ';"></div></td><td class="key" colspan="2" ">' + e.Candidat + '</td><td class="key">' + e.Party + '</td><td class="key">' + e.Votants + '</td><td class="value">' + i + " %</td></tr>"), $("#TooltipChart").append("<li><h2>" + e.Candidat + "</h2> <small>" + e.Votants + '</small><div class="pull-right">' + i + '% <i class="fa fa-level-up text-success"></i></div><div class="progress"><div class="progress-bar progress-bar-info" role="progressbar" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100" style="width:' + i + "%;background-color:" + e.Color + ';"> <span class="sr-only">20% Complete</span></div></div></li>') }), e.appendChild(o), !0) } function activearea() { iscancel ? (iscancel = !1, $("#btncancel").prop("disabled", !1), iszoom = !0) : (iscancel = !0, $("#btncancel").prop("disabled", !0), iszoom = !1, reset()) } function reset() { usZoom() } function usZoom() { iscancel = !1, $("#btncancel").prop("disabled", !0), iszoom = !1; var t = d3.transition().duration(800); projection.scale(scale).translate([swidth, sheight]), statePaths.transition(t).attr("d", path).attr("class", "state"), g.selectAll(".county").data([]).exit().transition(t).attr("d", path).style("opacity", 0).remove(), svg.transition().duration(750).call(zoom.transform, d3.zoomIdentity) } function FillProvinceColor() { var t; ($(".state").css("fill", "white"), ProvinceResult) && $.each(ProvinceResult, function (e, o) { t !== ProvinceResult[e].GUI_1 && (t = ProvinceResult[e].GUI_1, $("[stateCode=" + ProvinceResult[e].GUI_1 + "]").css("fill", ProvinceResult[e].Color)) }) } function FillTerritoiresColor() { var t; ($(".county").css("fill", "white"), TerritoiresResult) && $.each(TerritoiresResult, function (e, o) { activeProvince === TerritoiresResult[e].GUI_1 && t !== TerritoiresResult[e].GUI_2.split(".")[1] && (t = TerritoiresResult[e].GUI_2.split(".")[1], $("[territoiryCode=" + TerritoiresResult[e].GUI_2.split(".")[1] + "]").css("fill", TerritoiresResult[e].Color)) }) } function GetTerritoiresColor(t) { var e = TerritoiresResult.find(function (e) { return e.GUI_2 == t.properties.GID_2.slice(4) }); return e ? e.Color : "white" } function FillTopCandidate() { if (TopCandidate) { for (var t = 0; t < 2; t++)$("#lblcandidate" + t).html(TopCandidate[t] ? TopCandidate[t].Candidat : "Top Candidate"), $("#lblcandidatePer" + t).html(TopCandidate[t] ? TopCandidate[t].Perc + " %" : "0 %"), $("#lblcandidateVote" + t).html(TopCandidate[t] ? TopCandidate[t].Votants : ""), TopCandidate[t] ? $("#imgcandidate" + t).attr("src", "/Content/image/Candimg_" + TopCandidate[t].Candidatimg + ".png") : $("#imgcandidate" + t).attr("src", "/Content/image/logo.png"); FillToolTipChart() } ReportPolStation && (ReportPolStation[0] ? ($("#ReportPolstation").html(ReportPolStation[0].Reportstation), $("#PersPolstation").html(ReportPolStation[0].PersPolstation + " %")) : ($("#ReportPolstation").html(""), $("#PersPolstation").html("0 %"))), LastUpdatedPoolstn && (LastUpdatedPoolstn[0] ? ($("#lbllastupdatedProvinceName").html(LastUpdatedPoolstn[0].ProvinceName), $("#lbllastupdatedProvince").html(LastUpdatedPoolstn[0].Province), $("#lbllastupdatedVotants").html(LastUpdatedPoolstn[0].Votants), $("#lbllastupdatedVotantsName").html(LastUpdatedPoolstn[0].Polingstation)) : ($("#lbllastupdatedProvinceName").html("Province"), $("#lbllastupdatedProvince").html("0"), $("#lbllastupdatedVotants").html("0"), $("#lbllastupdatedVotantsName").html("Poling Stat.."))) } function FillToolTipChart() { $("#LblToltiptitle").text("GLOBAL RESULTS"); var t = $("#TooltipChart"); t.find("li").remove(), $.each(TopCandidate, function (e, o) { t.append("<li><h2>" + o.Candidat + "</h2> <small>" + o.Votants + '</small><div class="pull-right">' + o.Perc + '% <i class="fa fa-level-up text-success"></i></div><div class="progress"><div class="progress-bar progress-bar-info" role="progressbar" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100" style="width:' + o.Perc + "%;background-color:" + o.Color + ';"> <span class="sr-only">20% Complete</span></div></div></li>') }) } $(document).ready(function () { d3.json("/Resources/COD_TOPO.json", function (t, e) { if (t) throw t; states = topojson.feature(e, e.objects.Provinces).features, counties = topojson.feature(e, e.objects.Territoires).features, statePaths = g.selectAll(".state").data(states).enter().append("path").attr("class", "state").attr("d", path).style("fill", "white").attr("stateCode", function (t) { return t.properties.GID_1.slice(4) }).on("mouseover", function (t) { if (GenerateTooltip(t)) return tooltip.style("visibility", "visible") }).on("mousemove", function () { return tooltip.style("top", d3.event.pageY - 10 + "px").style("left", d3.event.pageX + 10 + "px") }).on("mouseout", function () { return FillToolTipChart(), tooltip.style("visibility", "hidden") }).on("click", function (t) { clicked(t) }), g.selectAll("text").data(topojson.feature(e, e.objects.Provinces).features).enter().append("svg:text").text(function (t) { return t.properties.NAME_1.slice(0, 6) }).attr("x", function (t) { return path.centroid(t)[0] }).attr("y", function (t) { return path.centroid(t)[1] }).attr("text-anchor", "middle").attr("font-size", "6pt"), FillProvinceColor() }) }), $(function () { $("#btnzoomin").click(function () { zoom.scaleBy(svg, 2) }), $("#btnzoomout").click(function () { zoom.scaleBy(svg, .5) }), FillTopCandidate() }), $(document).ready(function () { $.connection.realTimeMapHub.client.mapUpdate = function (t) { var e = JSON.parse(t); ProvinceResult = e.Table, TerritoiresResult = e.Table1, TopCandidate = e.Table2, ReportPolStation = e.Table3, LastUpdatedPoolstn = e.Table4, FillProvinceColor(), FillTopCandidate(), iszoom && FillTerritoiresColor(), $.toast({ heading: "New Results Updated", text: "getting refreshed data", position: "top-right", loaderBg: "#ff6849", icon: "success", hideAfter: 3500, stack: 2 }) }, $.connection.hub.start().done(function () { console.log("hub done") }), $(window).resize(function () { location.reload(!0) }) });